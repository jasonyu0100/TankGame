<?xml version="1.0"?>
<doc>
<assembly>
<name>
TankGame
</name>
</assembly>
<members>
<member name="T:TankGame.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:TankGame.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:TankGame.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="T:TankGame.Empty">
 <summary>
 Shows that a grid square is unoccupied
 </summary>
</member>
<member name="T:TankGame.EnvironmentalEntity">
 <summary>
 Represents the terrain of given square
 </summary>
</member>
<member name="M:TankGame.EnvironmentalEntity.pictureElement_Click(System.Object,System.EventArgs)">
 <summary>
 Executes action assigned to grid square in general
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
</member>
<member name="T:TankGame.GameCore">
 <summary>
 Main core of game. Is where all main functions and components are stored
 </summary>
</member>
<member name="M:TankGame.GameCore.setUpPlayers">
 <summary>
 Sets players to coordinate based on player num and adds to game
 </summary>
</member>
<member name="M:TankGame.GameCore.startingCoordinate(System.Int32)">
 <summary>
 Defines starting coordinates for a player
 </summary>
 <param name="playerNum"></param>
 <returns></returns>
</member>
<member name="M:TankGame.GameCore.getCurrentPlayer">
 <summary>
 Gets current player that is not dead
 </summary>
 <returns></returns>
</member>
<member name="M:TankGame.GameCore.updateHud(TankGame.Player)">
 <summary>
 Updates hud where user sees personal stats
 </summary>
 <param name="currentPlayer"></param>
</member>
<member name="M:TankGame.GameCore.setSquareStyle(TankGame.SquareStyleEnum,TankGame.Coordinate)">
 <summary>
 Updates coordinate square style
 </summary>
 <param name="style"></param>
 <param name="coordinate"></param>
</member>
<member name="M:TankGame.GameCore.startTurn">
 <summary>
 Updates turn number and miscellaneous information
 </summary>
</member>
<member name="M:TankGame.GameCore.setTurretSquareStyle(TankGame.SquareStyleEnum,TankGame.Player)">
 <summary>
 Sets current style for all player's turrets
 </summary>
 <param name="style"></param>
 <param name="currentPlayer"></param>
</member>
<member name="M:TankGame.GameCore.validCoord(TankGame.Coordinate)">
 <summary>
 Returns whether coordinate is within grid range
 </summary>
 <param name="coord"></param>
 <returns></returns>
</member>
<member name="M:TankGame.GameCore.displayActionPositions(System.Int32,TankGame.Coordinate,TankGame.GameMoves)">
 <summary>
 Displays positions where actions can be made
 </summary>
 <param name="range"></param>
 <param name="coordinate"></param>
 <param name="move"></param>
</member>
<member name="M:TankGame.GameCore.displayCosts(System.Collections.Generic.Dictionary{System.Tuple{System.Int32,System.Int32},System.Int32})">
 <summary>
 Displays costs of action
 </summary>
 <param name="costs"></param>
</member>
<member name="M:TankGame.GameCore.getMovementSquareCosts(TankGame.Coordinate,System.Collections.Generic.List{TankGame.Coordinate})">
 <summary>
 Gets cost of movement actions. Utilises djikstra's algorithm
 </summary>
 <param name="playerCoordinate"></param>
 <param name="availablePositions"></param>
 <returns></returns>
</member>
<member name="M:TankGame.GameCore.getMinCoordinate(System.Collections.Generic.Dictionary{System.Tuple{System.Int32,System.Int32},System.Int32})">
 <summary>
 Gets the minimum coordinate
 </summary>
 <param name="unvisited"></param>
 <returns></returns>
</member>
<member name="M:TankGame.GameCore.getSquareMovementCost(System.Tuple{System.Int32,System.Int32})">
 <summary>
 Gets cost to move to a square
 </summary>
 <param name="coordinate"></param>
 <returns></returns>
</member>
<member name="M:TankGame.GameCore.displayPossibleTurrets">
 <summary>
 Displays possible turrets that can be selected
 </summary>
</member>
<member name="M:TankGame.GameCore.availableMovePositions(System.Int32,TankGame.Coordinate)">
 <summary>
 Gets available positions you can move
 </summary>
 <param name="range"></param>
 <param name="coordinate"></param>
 <returns></returns>
</member>
<member name="M:TankGame.GameCore.availableStraightPositions(System.Int32,TankGame.Coordinate)">
 <summary>
 Gets possible positions in straight lines u,d,l,r from origin
 </summary>
 <param name="range"></param>
 <param name="coordinate"></param>
 <returns></returns>
</member>
<member name="M:TankGame.GameCore.availableDirectionPositions(TankGame.Coordinate,TankGame.Coordinate,System.Int32,System.Collections.Generic.List{TankGame.Coordinate})">
 <summary>
 Gets available positions for a given direction
 </summary>
 <param name="coordinate"></param>
 <param name="direction"></param>
 <param name="range"></param>
 <param name="available"></param>
 <returns></returns>
</member>
<member name="M:TankGame.GameCore.shoot(TankGame.Coordinate)">
 <summary>
 Shoot causes damage to selected entity
 </summary>
 <param name="gridCoord"></param>
</member>
<member name="M:TankGame.GameCore.move(TankGame.Coordinate)">
 <summary>
 Move, moves the user to the given coordinate
 </summary>
 <param name="gridCoord"></param>
</member>
<member name="M:TankGame.GameCore.build(TankGame.Coordinate)">
 <summary>
 Builds a turret, that cannot move at given coordinate
 </summary>
 <param name="gridCoord"></param>
</member>
<member name="M:TankGame.GameCore.turret(TankGame.Coordinate)">
 <summary>
 Selects turret that will execute a given action
 </summary>
 <param name="gridCoord"></param>
</member>
<member name="M:TankGame.GameCore.turretShoot(TankGame.Coordinate)">
 <summary>
 Turret shoots which causes damage to selected entity
 </summary>
 <param name="gridCoord"></param>
</member>
<member name="M:TankGame.GameCore.checkWinCondition">
 <summary>
 Checks if a player has won game
 </summary>
</member>
<member name="T:TankGame.Coordinate">
 <summary>
 Coordinate class defines an x,y coordinate. Can be used as vector.
 </summary>
</member>
<member name="T:TankGame.Entity">
 <summary>
 Defines an entity, that has a coordinate and picture
 Parent of all other classes occupying grid
 </summary>
</member>
<member name="M:TankGame.Game.handleMove(TankGame.GameMoves)">
 <summary>
 Handles action commanded by user to be executed
 </summary>
 <param name="move"></param>
</member>
<member name="M:TankGame.Game.Game_Load(System.Object,System.EventArgs)">
 <summary>
 On load defines text of buttons with custom costs
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
</member>
<member name="T:TankGame.GameGrid">
 <summary>
 Stores state information of elements, grid squares, and environments
 </summary>
</member>
<member name="M:TankGame.GameGrid.fillGrid">
 <summary>
 Fills element grid with empty
 </summary>
</member>
<member name="M:TankGame.GameGrid.createEnvironmentalGrid(TankGame.EnvironmentalImages,System.Collections.Generic.List{System.Collections.Generic.List{System.Char}})">
 <summary>
 Creates environment grid based on map
 </summary>
 <param name="environmentalImages"></param>
 <param name="map"></param>
 <returns></returns>
</member>
<member name="M:TankGame.GameGrid.gridCoordToActual(TankGame.Coordinate)">
 <summary>
 Transform grid coordinate to actual coordinate
 </summary>
 <param name="currentCoordinate"></param>
 <returns></returns>
</member>
<member name="M:TankGame.GameGrid.updateGridCell(TankGame.Entity,TankGame.Coordinate)">
 <summary>
 Updates grid cell
 </summary>
 <param name="currentEntity"></param>
 <param name="currentCoordinate"></param>
</member>
<member name="M:TankGame.GameGrid.deleteGridCell(TankGame.Coordinate)">
 <summary>
 Deletes element and picture
 </summary>
 <param name="currentCoordinate"></param>
</member>
<member name="M:TankGame.GameGrid.moveEntity(TankGame.Coordinate,TankGame.Coordinate)">
 <summary>
 Moves entity from one place to another
 </summary>
 <param name="startCoordinate"></param>
 <param name="endCoordinate"></param>
</member>
<member name="M:TankGame.GameGrid.createSquareGrid(TankGame.SquareImages)">
 <summary>
 Creates square grid which is the framework of grid displayed
 </summary>
 <param name="squareImages"></param>
</member>
<member name="M:TankGame.GameGrid.getSquareSize">
 <summary>
 Gets square size based on game width and rows and cols
 </summary>
 <returns></returns>
</member>
<member name="M:TankGame.GameGrid.clearSelected">
 <summary>
 Clears selected elements in grid
 </summary>
</member>
</members>
</doc>
